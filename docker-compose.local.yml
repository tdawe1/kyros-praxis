version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: kyros-postgres-local
    env_file:
      - .env.local.example
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kyros}
      POSTGRES_USER: ${POSTGRES_USER:-kyros_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please set POSTGRES_PASSWORD in .env.local.example}
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kyros_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: kyros-redis-local
    env_file:
      - .env.local.example
    command: >
      sh -c 'if [ -n "${REDIS_PASSWORD:-}" ]; then exec redis-server --appendonly yes --requirepass "$REDIS_PASSWORD"; else exec redis-server --appendonly yes; fi'
    volumes:
      - redis_local_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_local_data:
  redis_local_data: