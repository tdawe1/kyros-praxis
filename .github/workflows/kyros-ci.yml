name: kyros-ci
on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect changed paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          token: ${{ github.token }}
          filters: |
            orchestrator:
              - 'kyros-praxis/services/orchestrator/**'
              - 'services/orchestrator/**'
            console:
              - 'kyros-praxis/services/console/**'
              - 'services/console/**'
            docs:
              - 'docs/**'
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install CI Python deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml jsonschema
      - name: Install backend dependencies
        if: steps.changes.outputs.orchestrator == 'true'
        run: |
          cd services/orchestrator
          pip install -r requirements.txt
      - name: Lint backend
        if: steps.changes.outputs.orchestrator == 'true'
        run: |
          cd services/orchestrator
          ruff check .
      - name: Test backend (steel-thread)
        if: steps.changes.outputs.orchestrator == 'true'
        run: |
          cd services/orchestrator
          pytest -q -k "test_healthz_ok or test_create_task_and_list"
      - name: Install frontend dependencies
        if: steps.changes.outputs.console == 'true'
        run: |
          cd services/console
          npm ci
      - name: Lint frontend
        if: steps.changes.outputs.console == 'true'
        run: |
          cd services/console
          npm run lint
      - name: Test frontend
        if: steps.changes.outputs.console == 'true'
        run: |
          cd services/console
          npm test

      - name: Lint Markdown files
        run: npx markdownlint-cli "docs/agent-context/*.mdx"

      - name: Test handoff.py
        run: pytest agents/scripts/handoff.py

      - name: Validate context-pack schema
        run: python -c "import json, jsonschema; jsonschema.Draft7Validator.check_schema(json.load(open('docs/schemas/context-pack.json')))"

      - name: Security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          scan-ref: '.'
      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
