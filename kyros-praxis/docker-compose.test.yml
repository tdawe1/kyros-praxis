services:
  console:
    build:
      context: ./services/console
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=http://orchestrator:8000
    depends_on:
      - orchestrator

  orchestrator:
    build:
      context: ./services/orchestrator
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/kyros_test
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=test_key
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - qdrant
      - redis

  terminal-daemon:
    build:
      context: ./services/terminal-daemon
      dockerfile: Dockerfile
    ports:
      - "8787:8787"
    environment:
      - NODE_ENV=production

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=kyros_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    environment:
      - QDRANT__SERVICE__API_KEY=test_key
    volumes:
      - qdrant_data:/qdrant/storage

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  qdrant_data:
  redis_data: